<?php

/**
 * @file
 * Contains donation.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\donation\Entity\DonationTypeInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_help().
 */
function donation_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the donation module.
    case 'help.page.donation':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Donation Entity') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function donation_theme() {
  $theme = [];
  $theme['donation'] = array(
    'render element' => 'elements',
    'file' => 'donation.page.inc',
    'template' => 'donation',
  );
  $theme['donation_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'donation.page.inc',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function donation_theme_suggestions_donation(array $variables) {
  $suggestions = array();
  $entity = $variables['elements']['#donation'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'donation__' . $sanitized_view_mode;
  $suggestions[] = 'donation__' . $entity->bundle();
  $suggestions[] = 'donation__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'donation__' . $entity->id();
  $suggestions[] = 'donation__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Adds the default payment field to a donation type.
 *
 * @param \Drupal\donation\Entity\DonationTypeInterface $donation_type
 *   A Donation type object.
 * @param string $label
 *   (optional) The label for the field instance.
 *
 * @return \Drupal\field\Entity\FieldConfig
 *   A Donation Payment field object.
 */
function donation_add_payment_field(DonationTypeInterface $donation_type, $label = 'Payment Details') {
//
//  $field_storage = FieldStorageConfig::loadByName('donation', 'donation_payment');
//  $field = FieldConfig::loadByName('donation', $donation_type->id(), 'donation_payment');
//  if (empty($field)) {
//    $field = FieldConfig::create([
//      'field_storage' => $field_storage,
//      'bundle' => $donation_type->id(),
//      'label' => $label,
//      'settings' => array(),
//    ]);
//    $field->save();
//
//    // Assign widget settings for the 'default' form mode.
//    entity_get_form_display('donation', $donation_type->id(), 'default')
//      ->setComponent('donation_payment', array(
//        'type' => 'donation_payment',
//      ))
//      ->save();
//
//    // Assign display settings for the 'default' and 'teaser' view modes.
//    entity_get_display('donation', $donation_type->id(), 'default')
//      ->setComponent('donation_payment', array(
//        'label' => 'hidden',
//        'type' => 'donation_payment',
//      ))
//      ->save();
//
//  }
//
  return $field;
}
